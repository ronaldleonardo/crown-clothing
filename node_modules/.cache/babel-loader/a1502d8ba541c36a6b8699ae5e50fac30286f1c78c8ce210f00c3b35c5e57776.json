{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBUj5ohMHA0Sc7rX4lFNv8S4YzXpB80FmI\",\n  authDomain: \"crown-clothing-db-6ffd6.firebaseapp.com\",\n  projectId: \"crown-clothing-db-6ffd6\",\n  storageBucket: \"crown-clothing-db-6ffd6.appspot.com\",\n  messagingSenderId: \"1084796863129\",\n  appId: \"1:1084796863129:web:136e92e88edad87878ee08\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => {\n  return signInWithPopup(auth, googleProvider);\n};\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating new user', error.message);\n    }\n    return userDocRef;\n  }\n  ;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = () => signOut(auth);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser"],"sources":["/Users/ronaldleonardo/Documents/Course/CompleteReactDeveloper/crown-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n\tgetAuth, \n\tsignInWithRedirect,\n\tsignInWithPopup,\n\tGoogleAuthProvider,\n\tcreateUserWithEmailAndPassword,\n\tsignInWithEmailAndPassword,\n\tsignOut,\n} from 'firebase/auth';\n\nimport { \n\tgetFirestore,\n\tdoc,\n\tgetDoc,\n\tsetDoc,\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBUj5ohMHA0Sc7rX4lFNv8S4YzXpB80FmI\",\n  authDomain: \"crown-clothing-db-6ffd6.firebaseapp.com\",\n  projectId: \"crown-clothing-db-6ffd6\",\n  storageBucket: \"crown-clothing-db-6ffd6.appspot.com\",\n  messagingSenderId: \"1084796863129\",\n  appId: \"1:1084796863129:web:136e92e88edad87878ee08\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n \nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n\tprompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => {\n\treturn(\n\t\tsignInWithPopup(auth, googleProvider)\n\t\t);\n};\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (\n\tuserAuth, \n\tadditionalInformation = {}\n) => {\n\tif(!userAuth) return;\n\n\tconst userDocRef = doc(db, 'users', userAuth.uid);\n\tconsole.log(userDocRef);\n\n\tconst userSnapshot = await getDoc(userDocRef);\n\tconsole.log(userSnapshot);\n\tconsole.log(userSnapshot.exists());\n\n\tif(!userSnapshot.exists()){\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait setDoc(userDocRef, {\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalInformation,\n\t\t\t})\n\t\t} catch(error){\n\t\t\tconsole.log('error creating new user', error.message);\n\t\t}\n\treturn userDocRef;\n\t};\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n\tif(!email || !password) return;\n\treturn await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n\tif(!email || !password) return;\n\treturn await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = () => signOut(auth);\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACCC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,QACD,eAAe;AAEtB,SACCC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACA,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,yCAAyC;EACrDC,SAAS,EAAE,yBAAyB;EACpCC,aAAa,EAAE,qCAAqC;EACpDC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGnB,aAAa,CAACY,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAIhB,kBAAkB,EAAE;AAE/CgB,cAAc,CAACC,mBAAmB,CAAC;EAClCC,MAAM,EAAE;AACT,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGtB,OAAO,EAAE;AAC7B,OAAO,MAAMuB,qBAAqB,GAAG,MAAM;EAC1C,OACCrB,eAAe,CAACoB,IAAI,EAAEH,cAAc,CAAC;AAEvC,CAAC;AACD,OAAO,MAAMK,wBAAwB,GAAG,MAAMvB,kBAAkB,CAACqB,IAAI,EAAEH,cAAc,CAAC;AAEtF,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAE;AAEhC,OAAO,MAAMmB,0BAA0B,GAAG,gBACzCC,QAAQ,EAEJ;EAAA,IADJC,qBAAqB,uEAAG,CAAC,CAAC;EAE1B,IAAG,CAACD,QAAQ,EAAE;EAEd,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACG,GAAG,CAAC;EACjDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAMxB,MAAM,CAACoB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EACzBF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,EAAE,CAAC;EAElC,IAAG,CAACD,YAAY,CAACC,MAAM,EAAE,EAAC;IACzB,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGT,QAAQ;IACvC,MAAMU,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACH,MAAM5B,MAAM,CAACmB,UAAU,EAAE;QACxBM,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGT;MACJ,CAAC,CAAC;IACH,CAAC,CAAC,OAAMW,KAAK,EAAC;MACbR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,KAAK,CAACC,OAAO,CAAC;IACtD;IACD,OAAOX,UAAU;EACjB;EAAC;AACF,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,OAAOL,KAAK,EAAEM,QAAQ,KAAK;EAC5E,IAAG,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;EACxB,OAAO,MAAMtC,8BAA8B,CAACkB,IAAI,EAAEc,KAAK,EAAEM,QAAQ,CAAC;AACnE,CAAC;AAED,OAAO,MAAMC,kCAAkC,GAAG,OAAOP,KAAK,EAAEM,QAAQ,KAAK;EAC5E,IAAG,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;EACxB,OAAO,MAAMrC,0BAA0B,CAACiB,IAAI,EAAEc,KAAK,EAAEM,QAAQ,CAAC;AAC/D,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAMtC,OAAO,CAACgB,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}