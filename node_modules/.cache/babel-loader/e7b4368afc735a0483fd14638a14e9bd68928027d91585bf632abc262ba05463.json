{"ast":null,"code":"var _jsxFileName = \"/Users/ronaldleonardo/Documents/Course/CompleteReactDeveloper/crown-clothing/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles';\n\n/*\nwe need to make 3 styling types of button\ndefault\ninverted\ngoogle sign in\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","otherProps","CustomButton"],"sources":["/Users/ronaldleonardo/Documents/Course/CompleteReactDeveloper/crown-clothing/src/components/button/button.component.jsx"],"sourcesContent":["import { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles';\n\n\n/*\nwe need to make 3 styling types of button\ndefault\ninverted\ngoogle sign in\n*/ \n\nexport const BUTTON_TYPE_CLASSES = {\n\tbase: 'base',\n\tgoogle: 'google-sign-in',\n\tinverted: 'inverted',\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => {\n\treturn(\n\t\t{\n\t\t\t[BUTTON_TYPE_CLASSES.base]: BaseButton,\n\t\t\t[BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n\t\t\t[BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n\t\t}[buttonType]\n\t);\n};\n\n\nconst Button = ({ children, buttonType, ...otherProps}) =>{\n\tconst CustomButton = getButton(buttonType);\n\treturn(\n\t\t<CustomButton {...otherProps}>\n\t\t\t{children}\n\t\t</CustomButton>\n\t);\n};\n\nexport default Button; "],"mappings":";AAAA,SAASA,UAAU,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,iBAAiB;;AAGhF;AACA;AACA;AACA;AACA;AACA;AALA;AAOA,OAAO,MAAMC,mBAAmB,GAAG;EAClCC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAG,YAA2C;EAAA,IAA1CC,UAAU,uEAAGL,mBAAmB,CAACC,IAAI;EACvD,OACC;IACC,CAACD,mBAAmB,CAACC,IAAI,GAAGJ,UAAU;IACtC,CAACG,mBAAmB,CAACE,MAAM,GAAGJ,kBAAkB;IAChD,CAACE,mBAAmB,CAACG,QAAQ,GAAGJ;EACjC,CAAC,CAACM,UAAU,CAAC;AAEf,CAAC;AAGD,MAAMC,MAAM,GAAG,QAA2C;EAAA,IAA1C;IAAEC,QAAQ;IAAEF,UAAU;IAAE,GAAGG;EAAU,CAAC;EACrD,MAAMC,YAAY,GAAGL,SAAS,CAACC,UAAU,CAAC;EAC1C,oBACC,QAAC,YAAY;IAAA,GAAKG,UAAU;IAAA,UAC1BD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACK;AAEjB,CAAC;AAAC,KAPID,MAAM;AASZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}